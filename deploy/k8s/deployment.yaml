apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-layout-api
  labels:
    app: go-layout-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: go-layout-api
  template:
    metadata:
      labels:
        app: go-layout-api
    spec:
      containers:
      - name: api
        image: go-layout-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: GO_ENV
          value: "prod"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PORT
          value: "8080"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: go-layout-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: go-layout-secrets
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: DB_NAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: REDIS_PORT
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: RABBITMQ_HOST
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: go-layout-config
              key: RABBITMQ_PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: go-layout-secrets
              key: JWT_SECRET
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: go-layout-api
spec:
  selector:
    app: go-layout-api
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-layout-api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: api.go-layout.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-layout-api
            port:
              number: 80
