{
    "swagger": "2.0",
    "info": {
        "description": "A scalable, high-performance, and high-availability web application template built with Go.",
        "title": "Web API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/web/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of users with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id",
                        "description": "Sort field",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order (asc or desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by enabled status",
                        "name": "enabled",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.ListUsersResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreateUserResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.CreateUserReq": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin"
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "types.CreateUserResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "types.ListUsersResp": {
            "type": "object",
            "properties": {
                "page_info": {
                    "$ref": "#/definitions/types.PageResp"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ListUsersRespResult"
                    }
                }
            }
        },
        "types.ListUsersRespResult": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.PageResp": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "Current page number",
                    "type": "integer"
                },
                "page_size": {
                    "description": "Items per page",
                    "type": "integer"
                },
                "total_count": {
                    "description": "Total number of items",
                    "type": "integer"
                },
                "total_pages": {
                    "description": "Total number of pages",
                    "type": "integer"
                }
            }
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Business status code",
                    "type": "integer"
                },
                "data": {
                    "description": "Data payload"
                },
                "message": {
                    "description": "Response message",
                    "type": "string"
                },
                "meta": {
                    "description": "Metadata like pagination info"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer token authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}